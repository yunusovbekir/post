# Generated by Django 3.0.4 on 2020-04-17 11:04

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('ordering', models.PositiveIntegerField(default=0, verbose_name='Ordering')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Category',
                'ordering': ('ordering', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('post_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='CommentDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Comment Dislike',
                'verbose_name_plural': 'Comment Dislikes',
            },
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Comment Like',
                'verbose_name_plural': 'Comment Likes',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('Main Text', 'Main Text'), ('Accordion', 'Accordion'), ('Video', 'Video'), ('Gallery', 'Gallery'), ('Quote', 'Quote')], default='Main Text', max_length=255, verbose_name='Content type')),
                ('ordering', models.PositiveIntegerField(default=0, verbose_name='Ordering')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('text', models.TextField(blank=True, verbose_name='Text')),
            ],
            options={
                'verbose_name': 'Post Content',
                'verbose_name_plural': 'Post Contents',
                'ordering': ('ordering', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text')),
                ('post_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Post Date')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedback',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Slug')),
                ('custom_slug', models.BooleanField(default=False, verbose_name='Custom Slug')),
                ('short_description', models.TextField(blank=True, verbose_name='Short Description')),
                ('title_type', models.CharField(choices=[('Plain', 'Plain'), ('Bold', 'Bold'), ('Red', 'Red')], default='Plain', max_length=255, verbose_name='Title Types')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is approved')),
                ('is_advertisement', models.BooleanField(default=False, verbose_name='Is advertisement')),
                ('status', models.CharField(choices=[('Closed', 'Closed'), ('Staff only', 'Staff only'), ('Open', 'Open')], default='Open', max_length=255, verbose_name='Status')),
                ('social_meta_title', models.CharField(blank=True, help_text='This title will be displayed when the post shared the social media', max_length=255, verbose_name='Meta tag title for Social Media Sharing')),
                ('social_meta_description', models.TextField(blank=True, help_text='This description will be displayed when the post shared the social media', verbose_name='Meta tag description for Social Media Sharing')),
                ('seo_meta_title', models.CharField(blank=True, max_length=255, verbose_name='Meta tag title for SEO')),
                ('seo_meta_description', models.TextField(blank=True, verbose_name='Meta tag description for SEO')),
                ('seo_meta_keywords', models.TextField(blank=True, help_text='Keywords for improving SEO ', verbose_name='Meta tag keywords for SEO')),
                ('views', models.BigIntegerField(default=0, help_text='The number of views by visitors', verbose_name='Views')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Publish date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ('publish_date',),
            },
        ),
        migrations.CreateModel(
            name='PostDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Post Dislike',
                'verbose_name_plural': 'Post Dislikes',
            },
        ),
        migrations.CreateModel(
            name='PostIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Post Identifier',
                'verbose_name_plural': 'Post Identifiers',
            },
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='post_like', to='news.Post', verbose_name='Post')),
            ],
            options={
                'verbose_name': 'Post Like',
                'verbose_name_plural': 'Post Likes',
            },
        ),
    ]
