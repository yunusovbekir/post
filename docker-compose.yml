version: '3'

services:

#  nginx-proxy:
#    image: jwilder/nginx-proxy
#    container_name: nginx-proxy
#    restart: "always"
#    ports:
#      - "80:80"
#    volumes:
#      - /var/run/docker.sock:/tmp/docker.sock:ro
#      - ./_nginx/vhost/:/etc/nginx/vhost.d:ro
#      - ./_nginx/conf.d/client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf:ro
#      - ./app/static:/web/static
#      - ./app/media:/web/media


  postgres:
    container_name:  postgres-db
    image:           postgres:9.6
    ports:
      - 5432:5432 # Bind host port 5432 to PostgreSQL port 5432
    volumes:
      - ./postgredb:/var/lib/postgresql/data
    env_file: .env
    environment:
      - LC_ALL=C.UTF-8

  redis:
    image: redis:5
    restart: "on-failure"
    container_name: redis

    env_file: .env
    ports:
      - 127.0.0.1:6379:6379
    volumes:
      - /shared/redisdb:/var/lib/redis


  celery:
    container_name: celery
    build: .
    restart: "always"
    command: celery --app=app.celery:app worker -B --loglevel=DEBUG
    env_file: .env
    environment:
      - LANG=C.UTF-8
      - LANG=en_US.UTF-8
      - LANGUAGE=en_US:en
      - LC_ALL=en_US.UTF-8
      - STAGING=True
    volumes:
      - ./app:/code
      - /shared/media:/code/media
    links:
      - redis
      - postgres
    depends_on:
      - redis
      - postgres


  web:
    container_name: app
    build: .
    restart: "always"
    env_file: .env
    environment:
      - VIRTUAL_HOST=
      - VIRTUAL_PORT=8000
      - HTTP_PORT=8000
      - STATS_PORT=8001
      - DEBUG=True
      - LANG=C.UTF-8
      - LANG=en_US.UTF-8
      - LANGUAGE=en_US:en
      - LC_ALL=en_US.UTF-8
    volumes:
      - ./app:/code
      - ./uwsgi.ini:/conf/uwsgi.ini
      - /shared/media:/code/media
    ports:
      - "8015:8000"
#    links:
#      - postgres
    depends_on:
      - "postgres"



networks:
  default:
    external:
      name: nginx-proxy
