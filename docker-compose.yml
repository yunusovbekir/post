version: '3'

services:

  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db_name
      - DB_NAME=db_user
      - DB_USER=postgres
      - DB_PASS=6NwpPtvGyCsMLAKDZtazEP9WjANze25eP3e2UJdWrgrrKq
    depends_on:
      - postgres

  postgres:
    container_name:  postgres-db
    image:           postgres:9.6
    ports:
      - 5432:5432 # Bind host port 5432 to PostgreSQL port 5432
    volumes:
      - ./postgredb:/var/lib/postgresql/data
    env_file: .env
    environment:
      - LC_ALL=C.UTF-8

#  redis:  # no need for redis yet
#    image: redis:5
#    restart: "on-failure"
#    container_name: redis
#    environment:
#      - REDIS_HOST=redis
#      - REDIS_PORT=6379
#      - REDIS_PASSWORD=dKqs72RhtaPPYyfN
#    ports:
#      - 127.0.0.1:6379:6379
#    volumes:
#      - /shared/redisdb:/var/lib/redis

#  celery:  # no need for celery yet
#    container_name: celery
#    build: .
#    restart: "always"
#    command: celery --app=app.celery:app worker -B --loglevel=DEBUG
#    env_file: .env
#    environment:
#      - LANG=C.UTF-8
#      - LANG=en_US.UTF-8
#      - LANGUAGE=en_US:en
#      - LC_ALL=en_US.UTF-8
#      - STAGING=True
#    volumes:
#      - ./app:/code
#      - /shared/media:/code/media
#    links:
#      - redis
#      - postgres
#    depends_on:
#      - redis
#      - postgres
